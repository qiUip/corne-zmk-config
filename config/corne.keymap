/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;
};

&nice_view_spi {
    cs-gpios = <&pro_micro 8 GPIO_ACTIVE_HIGH>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB      |  Q  |  W  |  E  |  R  |    T    |   |    Y    |  U   |  I  |  O  |  P  | BKSP       |
// | CTRL/ESC |  A  |  S  |  D  |  F  |    G    |   |    H    |  J   |  K  |  L  |  ;  | ENT        |
// | SHFT     |  Z  |  X  |  C  |  V  |    B    |   |    N    |  M   |  ,  |  .  |  /  | SHFT/SRCH  |
//                        | ALT | GUI | SPC Fn2 |   | SPC Fn1 | GUI  | ALT |
                        bindings = <
   &kp TAB       &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U &kp I     &kp O   &kp P    &kp BSPC
   &mt LCTRL ESC &kp A &kp S &kp D &kp F &kp G   &kp H &kp J &kp K     &kp L   &kp SEMI &kp RET
   &kp LSHFT     &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M &kp COMMA &kp DOT &kp FSLH &mt RSHFT C_AC_SEARCH
                 &kp LALT &kp LGUI &lt 2 SPACE   &lt 1 SPACE &kp RGUI  &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | TAB      |  1  |  2  |  3  |  4  |  5   |   |  6  |  7  |  8  |  9  |  0  | DEL |
// | CTRL/ESC |  [  |  ]  |  -  |  =  |      |   | LFT | DWN |  UP | RGT |  '  |  /  |
// | SHFT     |  !  |  @  |  Â£  |  $  |  %   |   |  ^  |  &  |  *  |  (  |  )  |  ~  |
//                        | Fn3 | GUI | BKSP |   |     | GUI | Fn3 |
                        bindings = <
   &kp TAB   &kp N1   &kp N2   &kp N3    &kp N4    &kp N5      &kp N6    &kp N7   &kp N8    &kp N9    &kp N0   &kp DEL
   &trans    &kp LBKT &kp RBKT &kp MINUS &kp EQUAL &trans      &kp LEFT  &kp DOWN &kp UP    &kp RIGHT &kp SQT  &kp BACKSLASH
   &kp LSHFT &kp EXCL &kp AT   &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR &kp TILDE
                                    &mo 3   &trans &kp BSPC    &trans    &trans   &mo 3
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6   |  7  |  8  |  9  |  0   | BKSP |
// | CTRL |  {  |  }  |  _  |  +  |     |   |  LFT | DWN | UP  | RGT |  \   |  `   |
// | SHFT | F1  | F2  | F3  | F4  | F5  |   | F6   | F7  | F8  | F9  | F10  |  ~   |
//                    | Fn3 | GUI |     |   | BKSP | GUI | Fn3 |
                        bindings = <
   &trans    &kp N1   &kp N2   &kp N3    &kp N4   &kp N5     &kp N6   &kp N7  &kp N8 &kp N9  &kp N0 &kp DEL
   &trans    &kp LBRC &kp RBRC &kp UNDER &kp PLUS &trans     &kp LEFT &kp DOWN &kp UP &kp RIGHT  &kp NUBS &kp GRAVE
   &kp LSHFT &kp F1   &kp F2   &kp F3    &kp F4   &kp F5     &kp F6   &kp F7  &kp F8 &kp F9  &kp F10 &trans
                               &mo 3     &trans   &trans     &kp BSPC &trans  &mo 3
                        >;
                };

                control {
                      bindings = <
   &bootloader     &bt BT_CLR      &bt BT_PRV      &bt BT_NXT      &trans          &trans             &trans       &trans       &trans        &trans        &trans       &bootloader
   &trans          &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_EFF    &trans       &trans       &trans        &trans        &trans       &trans
   &rgb_ug RGB_TOG &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_EFR    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 3 &trans
                                                   &trans          &trans          &trans             &trans       &trans       &trans
                      >;
                };
        };
};
